<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mycompany.apache.cxf.rest</groupId>
	<artifactId>maven-core-slf4j-issue</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>JAX-RS Basic Demo</name>
	<description>JAX-RS Basic Demo</description>
	<properties>
		<cxf.version>3.1.5</cxf.version>
		<httpclient.version>3.1</httpclient.version>
		<javax.ws.rs.version>2.0.1</javax.ws.rs.version>
		<logback.version>1.1.6</logback.version>
		<slf4j.version>1.7.18</slf4j.version>
		<jetty.maven.plugin.version>9.3.7.v20160115</jetty.maven.plugin.version>
		<jetty.port>9090</jetty.port>
		<spring.version>4.2.5.RELEASE</spring.version>
		<jackson.version>2.7.2</jackson.version>
		<maven.dependency.plugin.version>2.8</maven.dependency.plugin.version>
		<cobertura.version>2.1.1</cobertura.version>
		<maven.source.plugin.version>3.0.1</maven.source.plugin.version>
	</properties>
	<dependencies>
		<!-- Spring Dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<!-- Generating wadl from existing CXF rest service -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${javax.ws.rs.version}</version>
		</dependency>
		<!-- This is to override spring's dependence on apache commons logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- Jackson The JSON Producer dependency -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.maven.plugin.version}</version>
				<configuration>
					<webAppConfig>
						<contextPath>/customer</contextPath>
					</webAppConfig>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<httpConnector>
						<port>${jetty.port}</port>
					</httpConnector>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>cobertura</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<cobertura.dir>${project.build.directory}/cobertura</cobertura.dir>
				<cobertura.instrumented.dir>${cobertura.dir}/instrumented</cobertura.instrumented.dir>
				<cobertura.report.dir>${cobertura.dir}/report</cobertura.report.dir>
				<cobertura.source.dir>${cobertura.dir}/source</cobertura.source.dir>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven.dependency.plugin.version}</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>package</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.mycompany.apache.cxf.rest</groupId>
									<artifactId>maven-core-slf4j-issue</artifactId>
									<version>${project.version}</version>
									<classifier>sources</classifier>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${cobertura.source.dir}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>net.sourceforge.cobertura</groupId>
								<artifactId>cobertura</artifactId>
								<version>${cobertura.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>cobertura-instrument</id>
								<phase>verify</phase>
								<configuration>
									<tasks unless="cobertura.report">
										<echo>Instrumenting war...</echo>
										<echo>war = ${project.build.finalName}</echo>
										<echo>instrumented.dir =
											${cobertura.instrumented.dir}</echo>
										<ant antfile="build.xml" target="instrument">
											<property name="instrumented.dir" value="${cobertura.instrumented.dir}" />
											<property name="build.dir" value="${project.build.directory}" />
											<property name="war.file" value="${project.build.finalName}.war" />
											<property name="include.regex" value="com.mycompany.apache.cxf.rest.dao.*" />
										</ant>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>cobertura-report</id>
								<phase>verify</phase>
								<configuration>
									<tasks if="cobertura.report">
										<echo>Generating coveradge report ...</echo>
										<echo>coveragereport.dir = ${cobertura.report.dir}</echo>
										<echo>src.dir = ${cobertura.source.dir}</echo>
										<ant antfile="build.xml" target="report">
											<property name="coveragereport.dir" value="${cobertura.report.dir}" />
											<property name="src.dir" value="${cobertura.source.dir}" />
										</ant>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
